<tool id="rseqc_geneBody_coverage2" name="Gene Body Converage (Bigwig)" version="1.1">
    <description>
        Read coverage over gene body
    </description>
    <requirements>
        <requirement type="package" version="3.0.1">R</requirement>
        <requirement type="package" version="1.7.1">numpy</requirement>
        <requirement type="package" version="2.3.7">rseqc</requirement>
    </requirements>
    <command>
        geneBody_coverage2.py -i $input -r $refgene -o output
    </command>
    <stdio>
        <exit_code range="1:" level="fatal" description="An error occured during execution, see stderr and stdout for more information" />
        <regex match="[Ee]rror" source="both" description="An error occured during execution, see stderr and stdout for more information" />
    </stdio>
    <inputs>
        <param name="input" type="data" label="Input bigwig file" format="bigwig" />
        <param name="refgene" type="data" label="Reference Genome" format="bed" />
    </inputs>
    <outputs>
        <data name="outputpdf" format="pdf" from_work_dir="output.geneBodyCoverage.pdf" label="${tool.name} on ${on_string} (PDF)" />
        <data name="outputr" format="txt" from_work_dir="output.geneBodyCoverage_plot.r" label="${tool.name} on ${on_string} (R Script)" />
        <data name="outputtxt" format="txt" from_work_dir="output.geneBodyCoverage.txt" label="${tool.name} on ${on_string} (Text)" />
    </outputs>
    <help>
geneBody_coverage2.py
+++++++++++++++++++++

Similar to geneBody_coverage.py. This module takes bigwig instead of BAM as input, and thus
requires much less memory. The BigWig file could be arbitrarily large.


Inputs
++++++++++++++

Input BAM/SAM file
    Alignment file in BAM/SAM format.

Reference gene model
    Gene Model in BED format.


Outputs
++++++++++++++

Read coverage over gene body. This module is used to check if reads coverage is uniform and if there is any 5’/3’ bias. This module scales all transcripts to 100 nt and calculates the number of reads covering each nucleotide position. Finally, it generates a plot illustrating the coverage profile along the gene body. NOTE: this module requires lots of memory for large BAM files, because it load the entire BAM file into memory. We add another script "geneBody_coverage2.py" into v2.3.1 which takes bigwig (instead of BAM) as input. It only use 200M RAM, but users need to convert BAM into WIG, and then WIG into BigWig.

Example output:
    .. image:: http://dldcc-web.brc.bcm.edu/lilab/liguow/RSeQC/figure/geneBody_coverage.png
        :height: 600 px
        :width: 600 px
        :scale: 80 %    

-----

About RSeQC 
+++++++++++

The RSeQC_ package provides a number of useful modules that can comprehensively evaluate high throughput sequence data especially RNA-seq data. "Basic modules" quickly inspect sequence quality, nucleotide composition bias, PCR bias and GC bias, while "RNA-seq specific modules" investigate sequencing saturation status of both splicing junction detection and expression estimation, mapped reads clipping profile, mapped reads distribution, coverage uniformity over gene body, reproducibility, strand specificity and splice junction annotation.

The RSeQC package is licensed under the GNU GPL v3 license.

.. image:: http://rseqc.sourceforge.net/_static/logo.png

.. _RSeQC: http://rseqc.sourceforge.net/



    </help>
</tool>
